package br.ufes.inf.nemo.transparencia.domain;

// Generated 01/05/2015 21:48:22 by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
/*
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
*/
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import br.ufes.inf.nemo.util.ejb3.persistence.PersistentObjectSupport;

/**
 * Pagamentos generated by hbm2java
 */
@Entity
@Table(name = "pagamentos", catalog = "transparencia")
public class Pagamentos extends PersistentObjectSupport implements Comparable<Pagamentos> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_Orgao")
	private Orgao orgao;
	
	@Column(name = "cod_GestaoEmitente")
	private Integer codGestaoEmitente;
	
	@Column(name = "str_OrdemBancaria", length = 50)
	private String strOrdemBancaria;
	
	@Column(name = "str_CpfCnpjNis", length = 20)
	private String strCpfCnpjNis;
	
	@Column(name = "str_NomeFavorecido", length = 200)
	private String strNomeFavorecido;	

	@Column(name = "str_NumProcesso", length = 20)
	private String strNumProcesso;
	
	@Column(name = "val_ValorRepasse", precision = 12, scale = 0)
	private Float valValorRepasse;	

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dat_EmissaoOrdemBancaria", length = 19)
	private Date datEmissaoOrdemBancaria;	

	@Column(name = "str_HistoricoDocumento", length = 2000)
	private String strHistoricoDocumento;
	
	@Column(name = "num_DocumentoEmpenhado", length = 50)
	private String numDocumentoEmpenhado;

	public Orgao getOrgao() {
		return this.orgao;
	}

	public void setOrgao(Orgao orgao) {
		this.orgao = orgao;
	}

	public Integer getCodGestaoEmitente() {
		return this.codGestaoEmitente;
	}

	public void setCodGestaoEmitente(Integer codGestaoEmitente) {
		this.codGestaoEmitente = codGestaoEmitente;
	}

	public String getStrOrdemBancaria() {
		return this.strOrdemBancaria;
	}

	public void setStrOrdemBancaria(String strOrdemBancaria) {
		this.strOrdemBancaria = strOrdemBancaria;
	}

	public String getStrCpfCnpjNis() {
		return this.strCpfCnpjNis;
	}

	public void setStrCpfCnpjNis(String strCpfCnpjNis) {
		this.strCpfCnpjNis = strCpfCnpjNis;
	}

	public String getStrNomeFavorecido() {
		return this.strNomeFavorecido;
	}

	public void setStrNomeFavorecido(String strNomeFavorecido) {
		this.strNomeFavorecido = strNomeFavorecido;
	}

	public String getStrNumProcesso() {
		return this.strNumProcesso;
	}

	public void setStrNumProcesso(String strNumProcesso) {
		this.strNumProcesso = strNumProcesso;
	}

	public Float getValValorRepasse() {
		return this.valValorRepasse;
	}

	public void setValValorRepasse(Float valValorRepasse) {
		this.valValorRepasse = valValorRepasse;
	}

	public Date getDatEmissaoOrdemBancaria() {
		return this.datEmissaoOrdemBancaria;
	}

	public void setDatEmissaoOrdemBancaria(Date datEmissaoOrdemBancaria) {
		this.datEmissaoOrdemBancaria = datEmissaoOrdemBancaria;
	}

	public String getStrHistoricoDocumento() {
		return this.strHistoricoDocumento;
	}

	public void setStrHistoricoDocumento(String strHistoricoDocumento) {
		this.strHistoricoDocumento = strHistoricoDocumento;
	}
	
	public String getNumDocumentoEmpenhado() {
		return this.numDocumentoEmpenhado;
	}

	public void setNumDocumentoEmpenhado(String numDocumentoEmpenhado) {
		this.numDocumentoEmpenhado = numDocumentoEmpenhado;
	}

	@Override
	public int compareTo(Pagamentos arg0) {
		
		if (orgao == null) return 1;
		if (arg0.orgao == null)	return -1;
		int cmp = orgao.compareTo(arg0.orgao);
		
		if (cmp != 0)	return cmp;
		
		if (strNomeFavorecido == null) return 1;
		if (arg0.strNomeFavorecido == null) return -1;
		cmp = strNomeFavorecido.compareTo(arg0.strNomeFavorecido);
		if (cmp != 0) return cmp;

		return uuid.compareTo(arg0.uuid);
	}
}
